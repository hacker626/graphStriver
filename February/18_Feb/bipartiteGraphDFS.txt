#User function Template for python3
# Title: Bipartite Graph [DFS]
# Video_Link: https://youtu.be/KG5YFfR0j8A
# Question_Link: https://practice.geeksforgeeks.org/problems/bipartite-graph/1

# Contributed By: Mridul Bhaskar
# Date: 18_02_2023

TC: O(V+E)
SC: O(V)





class Solution:
	def isBipartite(self, V, adj):
		#code here
		
		visited = [-1 for i in range(V)]
		
		for i in range(V):
		    if(visited[i] == -1):
		        
		        
		        if(self.dfs(i,visited,adj,-1)):
		            return 0
	    return 1
	def dfs(self,node,visited,adj,parent):
	    if(parent == -1):
	        visited[node] = 1
	    elif(visited[parent] == 1):
	        visited[node] = 2
	    elif(visited[parent] == 2):
	        visited[node] = 1
	    
	    
	    for i in adj[node]:
	        if(visited[i] == -1):
	            if(self.dfs(i,visited,adj,node)):
	                return 1
	        elif((visited[i] == 1 and visited[node] == 1) or (visited[i] == 2 and visited[node] == 2)):
	            return 1
		        


#{ 
 # Driver Code Starts
if __name__ == '__main__':
	T=int(input())
	for i in range(T):
		V, E = map(int, input().strip().split())
		adj = [[] for i in range(V)]
		for i in range(E):
			u, v = map(int, input().strip().split())
			adj[u].append(v)
			adj[v].append(u)
		obj = Solution()
		ans = obj.isBipartite(V, adj)
		if(ans):
			print("1")
		else:
			print("0")

# } Driver Code Ends
