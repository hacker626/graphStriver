#User function Template for python3
# Title: detect Cycle in Graph(using DFS)
# Video_Link: https://youtu.be/M3_pLsDdeuU
# Question_Link: https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1

# Contributed By: Mridul Bhaskar
# Date: 11_02_2023

TC: O(V+E)
SC: O(V)

from typing import List
class Solution:
    #Function to detect cycle in an undirected graph.
    #using BFS
	def isCycle(self, V: int, adj: List[List[int]]) -> bool:
		#Code here
		visited = [-1 for i in range(V)]
		
		for i in range(V):
		    if(visited[i] == -1):
		        if(self.dfs(adj,visited,-1,i)):
		            return 1
		return 0
		        
		        
		
	def dfs(self,adj,visited,parent,node):
	    visited[node] = 1
	    
	    
	    for i in adj[node]:
	        if(visited[i] == -1):
	            if(self.dfs(adj,visited,node,i)):
	                return 1
            elif(visited[i] != -1 and i!=parent):
                return 1

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
# 		for j in range(V):
# 		    parent = -1
# 		    if(visited[j] == -1):
# 		        queue = [j]
# 		        visited[j] =  1
		        
# 		        while(len(queue)>0):
# 		          #  parent = queue[0]
		           
		                
# 		            temp = queue.pop(0)
# 		          #  print(j,temp)
# 		            for i in adj[temp]:
# 		                if(visited[i] == -1):
# 		                    queue.append(i)
# 		                    visited[i] = 1
# 		                elif(visited[i] == 1 and i != parent):
# 		                  #  print(j,k,i)
# 		                    return 1 
#                     parent = temp
#         return 0



#{ 
 # Driver Code Starts
if __name__ == '__main__':

	T=int(input())
	for i in range(T):
		V, E = map(int, input().split())
		adj = [[] for i in range(V)]
		for _ in range(E):
			u, v = map(int, input().split())
			adj[u].append(v)
			adj[v].append(u)
		obj = Solution()
		ans = obj.isCycle(V, adj)
		if(ans):
			print("1")
		else:
			print("0")

# } Driver Code Ends








